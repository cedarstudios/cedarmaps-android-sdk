apply plugin: 'com.android.library'
apply plugin: 'signing'
apply plugin: 'com.github.dcendents.android-maven'

group = "com.cedarmaps"
version = "4.0.0"
def siteUrl = 'http://cedarmaps.com'
def gitUrl = 'http://cedarmaps.com/git'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15 //IceCream Sandwich 4.0.3
        targetSdkVersion 28 //Pie
    }
}

dependencies {
    api 'com.mapbox.mapboxsdk:mapbox-android-sdk:8.0.0'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.google.code.gson:gson:2.8.5'
}

// From https://raw.github.com/mcxiaoke/gradle-mvn-push/master/gradle-mvn-push.gradle
def isReleaseBuild() {
    return !VERSION_NAME.contains("SNAPSHOT")
}

apply from: 'gradle-javadoc.gradle'

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'CedarMpas SDK for Android'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'cedarstudios'
                        name 'CedarStudios'
                        email 'info@cedarmaps.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

signing {
    required { isReleaseBuild() }
    sign configurations.archives
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath = files(android.bootClasspath)
    failOnError false
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

